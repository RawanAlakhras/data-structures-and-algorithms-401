/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test
    public void testMaximumValue(){
        BinarySearchTree b2=new BinarySearchTree();
        b2.Add(1);
        assertEquals(1,b2.maximumValue());
        b2.Add(2);
        b2.Add(10);
        assertEquals(10,b2.maximumValue());
    }
    @Test
    public void testTree(){
        BinarySearchTree b1=new BinarySearchTree();
        assertNotNull(b1);

        b1.Add(1);
        assertEquals(1,b1.root.value);
        b1.Add(2);
        b1.Add(0);
        assertEquals(2,b1.root.right.value);
        assertEquals(0,b1.root.left.value);

        ArrayList <Integer> preOrder=new ArrayList<>();
        preOrder.add(1);
        preOrder.add(0);
        preOrder.add(2);
        assertEquals(preOrder,b1.DFTpre(b1.root));

        ArrayList <Integer> inOrder=new ArrayList<>();
        inOrder.add(0);
        inOrder.add(1);
        inOrder.add(2);
        assertEquals(inOrder,b1.DFTIn(b1.root));

        ArrayList <Integer> postOrder=new ArrayList<>();
        postOrder.add(0);
        postOrder.add(2);
        postOrder.add(1);
        assertEquals(postOrder,b1.DFTPost(b1.root));



    }
}
